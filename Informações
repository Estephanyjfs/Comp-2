import time
import random
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

class PneuFormula1:
    def __init__(self, composto, durabilidade, temperatura_ideal):
        self.composto = composto
        self.durabilidade = durabilidade
        self.temperatura_ideal = temperatura_ideal

    def analisar(self):
        print(f"Pneu de composto {self.composto} para Fórmula 1:")
        print(f"Durabilidade: {self.durabilidade} voltas")
        print(f"Temperatura Ideal: {self.temperatura_ideal}°C")

class PneuSlick(PneuFormula1):
    def __init__(self, composto, durabilidade, temperatura_ideal):
        super().__init__(composto, durabilidade, temperatura_ideal)
        self.__mapeamento_compostos = {
            "C0": "C1 (do ano anterior)",
            "C1": "Intermediário entre C1 e C2 (até 2022)",
            "C2": "Menos duro que C1 e C2 (até 2022)",
            "C3": "Pode servir como duro, médio ou macio",
            "C4": "Aquecimento rápido",
            "C5": "Menor desgaste, para circuitos de rua ou asfalto liso"
        }
        self.composto_equivalente = self.__mapeamento_compostos.get(composto, "Desconhecido")

    def analisar(self):
        super().analisar()
        print(f"Composto Equivalente: {self.composto_equivalente}")

class PneuChuva(PneuFormula1):
    def __init__(self, composto, durabilidade, temperatura_ideal, ranhuras):
        super().__init__(composto, durabilidade, temperatura_ideal)
        self.ranhuras = ranhuras

    def analisar(self):
        super().analisar()
        print(f"Tipo: Peneu para pista úmida/molhada")
        print(f"Número de ranhuras:{self.ranhuras}")
        print("Cracterísticase: Proporciona estabilidade em pista molhada e evita aquaplanagem.")
        
class PneuIntermediarioChuva(PneuFormula1):
    def __init__(self, composto, durabilidade, temperatura_ideal, ranhuras_superficiais):
        super().__init__(composto, durabilidade, temperatura_ideal)
        self.ranhuras_superficiais = ranhuras_superficiais

    def analisar(self):
        super().analisar()
        print(f"Tipo: Pneu Intermediário para Chuva")
        print(f"Ranhuras Superficiais: {self.ranhuras_superficiais}")
        print("Indicado para chuva fraca a moderada ou pista úmida sem chuva.")

class PneuChuvaForte(PneuFormula1):
    def __init__(self, composto, durabilidade, temperatura_ideal, maior_expulsao_agua):
        super().__init__(composto, durabilidade, temperatura_ideal)
        self.maior_expulsao_agua = maior_expulsao_agua

    def analisar(self):
        super().analisar()
        print(f"Tipo: Pneu para Chuva Forte")
        print(f"Maior Expulsão de Água: {self.maior_expulsao_agua}")
        print("Indicado para precipitação extrema, oferece maior proteção contra aquaplanagem.")

class PneuSelecionado:
    def __init__(self, tipo, cor, desgaste_maximo, durabilidade_maxima):
        self.tipo = tipo
        self.cor = cor
        self.desgaste_maximo = desgaste_maximo
        self.durabilidade_maxima = durabilidade_maxima

    def analisar(self):
        print(f"Tipo: Pneu {self.tipo} ({self.cor})")
        print(f"Desgaste Máximo: {self.desgaste_maximo}%")
        print(f"Durabilidade Máxima: {self.durabilidade_maxima} voltas")
